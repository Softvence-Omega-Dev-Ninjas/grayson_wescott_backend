services:
  app:
    platform: linux/amd64
    image: ${DOCKER_USERNAME}/${PACKAGE_NAME}:${PACKAGE_VERSION}
    container_name: ${PACKAGE_NAME}_api
    ports:
      - '${PORT}:${PORT}'
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis-master:
        condition: service_healthy
    restart: always
    command: >
      sh -c "
        echo 'üèÅ Waiting for DB...';
        sleep 5;
        npx prisma migrate deploy;
        echo 'üöÄ Starting app...';
        pnpm start
      "
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  db:
    image: postgres:17
    container_name: ${PACKAGE_NAME}_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: grayson_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d grayson_db']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  redis-master:
    image: redis
    container_name: redis-master
    command:
      [
        'redis-server',
        '--appendonly',
        'yes',
        '--bind',
        '0.0.0.0',
        '--protected-mode',
        'no',
      ]
    ports:
      - '22376:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5
    restart: always

  redis-replica:
    image: redis
    container_name: redis-replica
    command:
      [
        'redis-server',
        '--replicaof',
        'redis-master',
        '6379',
        '--bind',
        '0.0.0.0',
        '--protected-mode',
        'no',
      ]
    ports:
      - '22377:6379'
    depends_on:
      - redis-master
    restart: always

volumes:
  postgres_data:

networks:
  default:
    name: ${PACKAGE_NAME}_network
    labels:
      - 'project=${PACKAGE_NAME}'
