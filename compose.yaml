services:
  app:
    platform: linux/amd64
    image: ${DOCKER_USERNAME}/${PACKAGE_NAME}:${PACKAGE_VERSION}
    container_name: ${PACKAGE_NAME}_api
    ports:
      - '${PORT}:${PORT}'
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    healthcheck:
      disable: true
    command: >
      sh -c "
        npx prisma migrate deploy &&
        pnpm start
      "
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  db:
    image: postgres
    container_name: ${PG_DATABASE}
    restart: always
    environment:
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_SHARED_PRELOAD_LIBRARIES: pg_stat_statements
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '${PG_PORT}:${PG_PORT}'
    healthcheck:
      test:
        ['CMD', 'pg_isready', '-U', '${PG_USERNAME}', '-d', '${PG_DATABASE}']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s

  redis:
    image: redis
    container_name: ${REDIS_CONTAINER}
    restart: always
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 1000mb --maxmemory-policy noeviction
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: ${PACKAGE_NAME}_network
    labels:
      - 'project=${PACKAGE_NAME}'
