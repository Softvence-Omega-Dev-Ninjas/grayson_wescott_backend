name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: ['**']

jobs:
  ci-check:
    name: Lint, Format, Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Lint
        run: pnpm lint

      - name: Format Check
        run: pnpm format

      - name: Build Project
        run: pnpm build

  build-and-push:
    name: Build & Push Docker Image üèóÔ∏è
    needs: ci-check
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub üîë
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Generate .env from GitHub Secrets
        run: |
          cat <<EOF > .env
          NODE_ENV=${{ secrets.NODE_ENV }}
          IMAGE_TAG=${{ secrets.IMAGE_TAG }}
          PACKAGE_NAME=${{ secrets.PACKAGE_NAME }}
          PACKAGE_VERSION=${{ secrets.PACKAGE_VERSION }}

          PG_USERNAME=${{ secrets.PG_USERNAME }}
          PG_PASSWORD=${{ secrets.PG_PASSWORD }}
          PG_DATABASE=${{ secrets.PG_DATABASE }}
          PG_PORT=${{ secrets.PG_PORT }}
          PG_HOST=${{ secrets.PG_HOST }}

          DATABASE_URL=${{ secrets.DATABASE_URL }}

          JWT_SECRET=${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}

          PORT=${{ secrets.PORT }}
          EMAIL=${{ secrets.EMAIL }}
          BASE_URL=${{ secrets.BASE_URL }}
          HEALTH_ENDPOINT=${{ secrets.HEALTH_ENDPOINT }}

          MAIL_USER=${{ secrets.MAIL_USER }}
          MAIL_PASS=${{ secrets.MAIL_PASS }}

          SUPER_ADMIN_EMAIL=${{ secrets.SUPER_ADMIN_EMAIL }}
          SUPER_ADMIN_PASS=${{ secrets.SUPER_ADMIN_PASS }}

          REDIS_HOST=${{ secrets.REDIS_HOST }}
          REDIS_PORT=${{ secrets.REDIS_PORT }}
          REDIS_CONTAINER=${{ secrets.REDIS_CONTAINER }}
          REDIS_URL=redis://${{ secrets.REDIS_HOST }}:${{ secrets.REDIS_PORT }}

          TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_PHONE_NUMBER=${{ secrets.TWILIO_PHONE_NUMBER }}

          OAUTH_CLIENT_ID=${{ secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET=${{ secrets.OAUTH_CLIENT_SECRET }}

          TWITTER_CONSUMER_KEY=${{ secrets.TWITTER_CONSUMER_KEY }}
          TWITTER_CONSUMER_SECRET=${{ secrets.TWITTER_CONSUMER_SECRET }}
          TWITTER_REDIRECT_URL=${{ secrets.TWITTER_REDIRECT_URL }}

          FRONTEND_VERIFICATION_URL=${{ secrets.FRONTEND_VERIFICATION_URL }}
          FRONTEND_RESET_PASSWORD_URL=${{ secrets.FRONTEND_RESET_PASSWORD_URL }}

          STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}

          AWS_REGION=${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}

          DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}

          GIT_TOKEN=${{ secrets.GIT_TOKEN }}

          VPS_USER=${{ secrets.VPS_USER }}
          VPS_HOST=${{ secrets.VPS_HOST }}
          VPS_HOST_IP=${{ secrets.VPS_HOST_IP }}
          EOF


      - name: Build Docker Image üî®
        run: docker build -t ${{ secrets.IMAGE_TAG }} .

      - name: Push Docker Image üöÄ
        run: docker push ${{ secrets.IMAGE_TAG }}
