model Program {
  id String @id @default(uuid())

  name        String
  description String?
  coachNote   String?

  categories ExerciseCategory[]
  status     ProgramStatus

  duration Int // in weeks

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // relations
  exercises    ProgramExercise[]
  userPrograms UserProgram[]

  @@map("programs")
}

model UserProgram {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  program   Program @relation(fields: [programId], references: [id], onDelete: Cascade)
  programId String

  status ProgramProgress @default(IN_PROGRESS)

  startDate DateTime  @default(now())
  endDate   DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("user_programs")
  @@unique([userId, programId], map: "user_programs_unique")
}

enum ExerciseCategory {
  UPERBODY
  LOWERBODY
  CORE
  CARDIO
  STRENGTH
  YOGA
  MEDITATION
}

enum ProgramStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
  COMPLETED
}

enum ProgramProgress {
  IN_PROGRESS
  PAUSED
  COMPLETED
}
