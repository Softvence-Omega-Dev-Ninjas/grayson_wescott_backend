model User {
  id String @id @default(uuid())

  email String @unique

  phone    String? @unique
  username String? @unique
  password String? // hashed password (nullable for social accounts)

  name      String? @default("Unnamed User")
  avatarUrl String? @default("https://www.gravatar.com/avatar/000000000000000000000000000000?d=mp&f=y")

  role         UserRole     @default(USER)
  status       UserStatus   @default(ACTIVE)
  signUpMethod SignUpMethod @default(EMAIL) // * First sign-up method

  // Logout tracking
  isLoggedIn   Boolean   @default(false)
  lastLoginAt  DateTime?
  lastLogoutAt DateTime?
  lastActiveAt DateTime?

  // timezone
  timezone String @default("UTC") // e.g., "America/New_York"

  // Messaging Preferences
  allowDirectMessages Boolean @default(true)
  allowEmailMessages  Boolean @default(true)

  // OTP / Verification OR TFA
  otp             String? // hashed OTP
  otpType         OtpType?
  otpExpiresAt    DateTime?
  isVerified      Boolean   @default(false)
  isPhoneVerified Boolean   @default(false)

  // Reset password
  resetToken          String? // hashed reset token
  resetTokenExpiresAt DateTime?

  // 2FA
  isTwoFAEnabled Boolean      @default(false)
  twoFAMethod    TwoFAMethod? // EMAIL, PHONE, AUTH_APP
  twoFASecret    String? // For authenticator apps (TOTP secret)`

  // Social auth linked accounts
  authProviders UserAuthProvider[]

  // Chats
  privateMessage                 PrivateMessage[]
  privateMessageStatus           PrivateMessageStatus[]
  privateCallInitiator           PrivateCall[]
  privateConversationParticipant PrivateConversationParticipant[]
  privateCallParticipant         PrivateCallParticipant[]

  // Notifications
  notifications UserNotification[]

  // Exercises
  userPrograms UserProgram[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("users")
}

model UserAuthProvider {
  id String @id @default(uuid())

  provider   AuthProvider
  providerId String

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([provider, providerId])
  @@map("user_auth_providers")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  SUSPENDED
  ON_HOLD
  DEACTIVATED
}

enum AuthProvider {
  GOOGLE
  FACEBOOK
  TWITTER
}

enum SignUpMethod {
  EMAIL
  MANUAL
  GOOGLE
  FACEBOOK
  TWITTER
}

enum TwoFAMethod {
  EMAIL
  PHONE
  AUTH_APP
}

enum OtpType {
  VERIFICATION
  PHONE_VERIFICATION
  TFA
}
